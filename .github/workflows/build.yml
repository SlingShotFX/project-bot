name: CI

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt install -y \
            build-essential ccache git libncurses5 libncurses5-dev libtiff5-dev libjpeg8-dev zlib1g-dev \
            libfreetype6-dev liblcms2-dev libwebp-dev libffi-dev \
            openjdk-8-jdk unzip zip wget
          pip install --upgrade cython buildozer
        shell: bash

      - name: Install Android SDK tools
        run: |
          set -e
          mkdir -p $ANDROID_HOME/cmdline-tools/latest
          wget -q "https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip" -O android-sdk-tools.zip
          unzip -qq android-sdk-tools.zip -d $ANDROID_HOME/cmdline-tools/latest
          mv $ANDROID_HOME/cmdline-tools/latest/cmdline-tools/* $ANDROID_HOME/cmdline-tools/latest/
          rmdir $ANDROID_HOME/cmdline-tools/latest/cmdline-tools
        shell: bash

      - name: Accept Android licenses
        run: |
          mkdir -p $ANDROID_HOME/licenses
          echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > $ANDROID_HOME/licenses/android-sdk-license
          echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > $ANDROID_HOME/licenses/android-sdk-preview-license
          echo -e "\n7d3c1e1a99a77b662f1254ddbeed3901e976f5a7" > $ANDROID_HOME/licenses/intel-android-sysimage-license
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
        shell: bash

      - name: Update SDK and install build-tools
        run: |
          set -e
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --update || { echo 'SDK update failed'; exit 1; }
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;30.0.2" || { echo 'Build tools installation failed'; exit 1; }
        shell: bash

      - name: Install AIDL compiler
        run: |
          sudo apt install -y aidl
        shell: bash

      - name: Get Date
        id: get-date
        run: echo "date=$(date -u '+%Y%m%d')" >> $GITHUB_ENV

      - name: Cache Buildozer global directory
        uses: actions/cache@v2
        with:
          path: .buildozer_global
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}

      - name: Cache Buildozer directory
        uses: actions/cache@v2
        with:
          path: .buildozer
          key: ${{ runner.os }}-${{ env.date }}-${{ hashFiles('buildozer.spec') }}

      - name: Build with Buildozer
        run: |
          set -e
          buildozer android debug || { echo 'Buildozer build failed'; exit 1; }
        shell: bash

      - name: List APK files
        run: |
          ls -l .buildozer/android/platform/build/dists/*/bin/*.apk || { echo 'Listing APK files failed'; exit 1; }
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: .buildozer/android/platform/build/dists/*/bin/*.apk
